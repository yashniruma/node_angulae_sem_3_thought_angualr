// src/main.ts
import { bootstrapApplication } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_platform-browser.js?v=c8d19cfe";

// src/app/app.config.ts
import { provideZoneChangeDetection } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import { provideRouter } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_router.js?v=c8d19cfe";

// src/app/app.routes.ts
import { RouterModule as RouterModule2 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_router.js?v=c8d19cfe";
import { NgModule } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";

// src/app/login/login.component.ts
import { CommonModule } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_common.js?v=c8d19cfe";
import { FormsModule } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_forms.js?v=c8d19cfe";
import { Component } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import * as i0 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import * as i1 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_common_http.js?v=c8d19cfe";
import * as i2 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_router.js?v=c8d19cfe";
import * as i3 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_forms.js?v=c8d19cfe";
var _c0 = () => ({ standalone: true });
var LoginComponent = class _LoginComponent {
  http;
  router;
  data_Array = [];
  isResultLoaded = false;
  isUpdateFormActive = false;
  crrentid = "";
  email = "";
  password = "";
  constructor(http, router) {
    this.http = http;
    this.router = router;
    console.log("Admin login work");
  }
  login() {
  }
  // login() {
  //   let data = {
  //     "email": this.email,
  //     "password": this.password,
  //   };
  //   if (this.email == '') {
  //     alert('All data required')
  //   }
  //   else if (this.password == '') {
  //     alert('All data required')
  //   }
  //   else {
  //     this.http.post("http://localhost:8086/api/user/data", data).subscribe((res_d: any) => {
  //       console.log(res_d);
  //       console.log("all done");
  //         if (res_d.status) {
  //           // Store the token in localStorage
  //           localStorage.setItem('token', res_d.token);
  //           // localStorage.setItem('role', 'user');
  //           // Login successful, redirect to home page
  //           this.router.navigate(['thought']);
  //         } else {
  //           alert('somthing wrong');
  //           this.router.navigate([''])
  //         }
  //         // alert("Login Done")
  //       }
  //    ,
  //       (error) => {
  //         if (error.status === 409) {
  //           // If user is already registered, show error toast
  //           // this.toastr.error('User already registered', 'Registration Error');
  //           alert("User already registered")
  //         } else {
  //           // Handle other errors
  //           // this.toastr.error('Registration failed', 'Error');
  //           alert("Registration failed")
  //         }
  //       }
  //     );
  //   }
  // }
  save() {
    if (this.crrentid == "") {
      this.login();
    } else {
    }
  }
  static \u0275fac = function LoginComponent_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _LoginComponent)(i0.\u0275\u0275directiveInject(i1.HttpClient), i0.\u0275\u0275directiveInject(i2.Router));
  };
  static \u0275cmp = /* @__PURE__ */ i0.\u0275\u0275defineComponent({ type: _LoginComponent, selectors: [["login"]], standalone: true, features: [i0.\u0275\u0275StandaloneFeature], decls: 21, vars: 6, consts: [[2, "background-image", "url('/images/login.jpg')", "background-size", "cover", "background-position", "center", "background-repeat", "no-repeat", "min-height", "100vh", "width", "100%", "padding", "20px"], [1, "container", "mt-4"], [1, "card"], [2, "background-color", "rgb(0, 0, 0)", "color", "aqua"], [1, "form-group"], ["type", "text", "id", "yname", "placeholder", "Enter Email", 1, "form-control", 3, "ngModelChange", "ngModel", "ngModelOptions"], [1, "class", "form-group"], ["type", "text", "id", "ysurname", "placeholder", "Enter password", 1, "form-control", 3, "ngModelChange", "ngModel", "ngModelOptions"], ["type", "submit", 1, "btn", "btn-primary", "mt-4", "form-control", 3, "click"]], template: function LoginComponent_Template(rf, ctx) {
    if (rf & 1) {
      i0.\u0275\u0275elementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "h1", 3);
      i0.\u0275\u0275text(4, " Login #kisi ko dukh nahi dena he");
      i0.\u0275\u0275elementEnd();
      i0.\u0275\u0275element(5, "br");
      i0.\u0275\u0275elementStart(6, "form")(7, "div", 4)(8, "label");
      i0.\u0275\u0275text(9, "Email ");
      i0.\u0275\u0275elementEnd();
      i0.\u0275\u0275elementStart(10, "input", 5);
      i0.\u0275\u0275twoWayListener("ngModelChange", function LoginComponent_Template_input_ngModelChange_10_listener($event) {
        i0.\u0275\u0275twoWayBindingSet(ctx.email, $event) || (ctx.email = $event);
        return $event;
      });
      i0.\u0275\u0275elementEnd()();
      i0.\u0275\u0275element(11, "br");
      i0.\u0275\u0275elementStart(12, "div", 6)(13, "label");
      i0.\u0275\u0275text(14, "password");
      i0.\u0275\u0275elementEnd();
      i0.\u0275\u0275elementStart(15, "input", 7);
      i0.\u0275\u0275twoWayListener("ngModelChange", function LoginComponent_Template_input_ngModelChange_15_listener($event) {
        i0.\u0275\u0275twoWayBindingSet(ctx.password, $event) || (ctx.password = $event);
        return $event;
      });
      i0.\u0275\u0275elementEnd()();
      i0.\u0275\u0275element(16, "br")(17, "br");
      i0.\u0275\u0275elementStart(18, "button", 8);
      i0.\u0275\u0275listener("click", function LoginComponent_Template_button_click_18_listener() {
        return ctx.save();
      });
      i0.\u0275\u0275text(19, "SAVE");
      i0.\u0275\u0275elementEnd()()();
      i0.\u0275\u0275element(20, "hr");
      i0.\u0275\u0275elementEnd()();
    }
    if (rf & 2) {
      i0.\u0275\u0275advance(10);
      i0.\u0275\u0275twoWayProperty("ngModel", ctx.email);
      i0.\u0275\u0275property("ngModelOptions", i0.\u0275\u0275pureFunction0(4, _c0));
      i0.\u0275\u0275advance(5);
      i0.\u0275\u0275twoWayProperty("ngModel", ctx.password);
      i0.\u0275\u0275property("ngModelOptions", i0.\u0275\u0275pureFunction0(5, _c0));
    }
  }, dependencies: [CommonModule, FormsModule, i3.\u0275NgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm] });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.\u0275setClassDebugInfo(LoginComponent, { className: "LoginComponent", filePath: "src\\app\\login\\login.component.ts", lineNumber: 14 });
})();

// src/app/navbar/navbar.component.ts
import { Component as Component2 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import { RouterModule } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_router.js?v=c8d19cfe";
import { CommonModule as CommonModule2 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_common.js?v=c8d19cfe";
import * as i02 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import * as i12 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_router.js?v=c8d19cfe";
import * as i22 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_common.js?v=c8d19cfe";
function NavbarComponent_li_20_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i02.\u0275\u0275getCurrentView();
    i02.\u0275\u0275elementStart(0, "li", 7)(1, "a", 12);
    i02.\u0275\u0275listener("click", function NavbarComponent_li_20_Template_a_click_1_listener() {
      i02.\u0275\u0275restoreView(_r1);
      const ctx_r1 = i02.\u0275\u0275nextContext();
      return i02.\u0275\u0275resetView(ctx_r1.logout());
    });
    i02.\u0275\u0275text(2, "Logout");
    i02.\u0275\u0275elementEnd()();
  }
}
var NavbarComponent = class _NavbarComponent {
  router;
  constructor(router) {
    this.router = router;
  }
  // Check if the user is logged in
  isLoggedIn() {
    if (typeof window !== "undefined" && localStorage) {
      return !!localStorage.getItem("token");
    }
    return false;
  }
  logout() {
    localStorage.removeItem("token");
    this.router.navigate(["/app-login"]);
  }
  static \u0275fac = function NavbarComponent_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _NavbarComponent)(i02.\u0275\u0275directiveInject(i12.Router));
  };
  static \u0275cmp = /* @__PURE__ */ i02.\u0275\u0275defineComponent({ type: _NavbarComponent, selectors: [["navbar"]], standalone: true, features: [i02.\u0275\u0275StandaloneFeature], decls: 21, vars: 1, consts: [[1, "navbar", "navbar-expand-lg", "navbar-dark", "bg-dark"], ["type", "button", "data-toggle", "collapse", "data-target", "#navbarSupportedContent", "aria-controls", "navbarSupportedContent", "aria-expanded", "false", "aria-label", "Toggle navigation", 1, "navbar-toggler"], [1, "navbar-toggler-icon"], ["id", "navbarSupportedContent", 1, "collapse", "navbar-collapse"], [1, "navbar-nav", "mr-auto"], [1, "nav-item", "active"], ["href", "", 1, "nav-link"], [1, "nav-item"], ["href", "alluser", 1, "nav-link"], ["href", "thought", 1, "nav-link"], ["href", "addthought", 1, "nav-link"], ["class", "nav-item", 4, "ngIf"], ["href", "javascript:void(0)", 1, "nav-link", 3, "click"]], template: function NavbarComponent_Template(rf, ctx) {
    if (rf & 1) {
      i02.\u0275\u0275elementStart(0, "nav", 0)(1, "button", 1);
      i02.\u0275\u0275element(2, "span", 2);
      i02.\u0275\u0275elementEnd();
      i02.\u0275\u0275elementStart(3, "div", 3)(4, "ul", 4)(5, "li", 5)(6, "a", 6);
      i02.\u0275\u0275text(7, "#kisi ko dukh nahi dena he ");
      i02.\u0275\u0275elementEnd()();
      i02.\u0275\u0275elementStart(8, "li", 7)(9, "a", 8);
      i02.\u0275\u0275text(10, "ALL USER");
      i02.\u0275\u0275elementEnd()();
      i02.\u0275\u0275elementStart(11, "li", 7)(12, "a", 9);
      i02.\u0275\u0275text(13, " ALL THOUGHT ");
      i02.\u0275\u0275elementEnd()();
      i02.\u0275\u0275elementStart(14, "li", 7)(15, "a", 10);
      i02.\u0275\u0275text(16, "ADD THOUGHT ");
      i02.\u0275\u0275elementStart(17, "b");
      i02.\u0275\u0275text(18, "+");
      i02.\u0275\u0275elementEnd()()();
      i02.\u0275\u0275element(19, "li", 7);
      i02.\u0275\u0275template(20, NavbarComponent_li_20_Template, 3, 0, "li", 11);
      i02.\u0275\u0275elementEnd()()();
    }
    if (rf & 2) {
      i02.\u0275\u0275advance(20);
      i02.\u0275\u0275property("ngIf", ctx.isLoggedIn());
    }
  }, dependencies: [CommonModule2, i22.NgIf, RouterModule] });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i02.\u0275setClassDebugInfo(NavbarComponent, { className: "NavbarComponent", filePath: "src\\app\\navbar\\navbar.component.ts", lineNumber: 13 });
})();

// src/app/alluser/alluser.component.ts
import { Component as Component3 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import * as i03 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
var AlluserComponent = class _AlluserComponent {
  static \u0275fac = function AlluserComponent_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _AlluserComponent)();
  };
  static \u0275cmp = /* @__PURE__ */ i03.\u0275\u0275defineComponent({ type: _AlluserComponent, selectors: [["alluser"]], standalone: true, features: [i03.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function AlluserComponent_Template(rf, ctx) {
    if (rf & 1) {
      i03.\u0275\u0275elementStart(0, "p");
      i03.\u0275\u0275text(1, "alluser works!");
      i03.\u0275\u0275elementEnd();
    }
  } });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i03.\u0275setClassDebugInfo(AlluserComponent, { className: "AlluserComponent", filePath: "src\\app\\alluser\\alluser.component.ts", lineNumber: 10 });
})();

// src/app/thought/thought.component.ts
import { Component as Component4 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import * as i04 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
var ThoughtComponent = class _ThoughtComponent {
  static \u0275fac = function ThoughtComponent_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _ThoughtComponent)();
  };
  static \u0275cmp = /* @__PURE__ */ i04.\u0275\u0275defineComponent({ type: _ThoughtComponent, selectors: [["thought"]], standalone: true, features: [i04.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function ThoughtComponent_Template(rf, ctx) {
    if (rf & 1) {
      i04.\u0275\u0275elementStart(0, "p");
      i04.\u0275\u0275text(1, "thought works!");
      i04.\u0275\u0275elementEnd();
    }
  } });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i04.\u0275setClassDebugInfo(ThoughtComponent, { className: "ThoughtComponent", filePath: "src\\app\\thought\\thought.component.ts", lineNumber: 10 });
})();

// src/app/addthought/addthought.component.ts
import { Component as Component5 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import * as i05 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
var AddthoughtComponent = class _AddthoughtComponent {
  static \u0275fac = function AddthoughtComponent_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _AddthoughtComponent)();
  };
  static \u0275cmp = /* @__PURE__ */ i05.\u0275\u0275defineComponent({ type: _AddthoughtComponent, selectors: [["addthought"]], standalone: true, features: [i05.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function AddthoughtComponent_Template(rf, ctx) {
    if (rf & 1) {
      i05.\u0275\u0275elementStart(0, "p");
      i05.\u0275\u0275text(1, "addthought works!");
      i05.\u0275\u0275elementEnd();
    }
  } });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i05.\u0275setClassDebugInfo(AddthoughtComponent, { className: "AddthoughtComponent", filePath: "src\\app\\addthought\\addthought.component.ts", lineNumber: 10 });
})();

// src/app/app.routes.ts
import * as i06 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
var routes = [
  { path: "", redirectTo: "/login", pathMatch: "full" },
  // { path: '**', redirectTo: 'login' },
  { path: "login", component: LoginComponent },
  { path: "navbar", component: NavbarComponent },
  { path: "alluser", component: AlluserComponent },
  { path: "thought", component: ThoughtComponent },
  { path: "addthought", component: AddthoughtComponent }
];
var AppRoutingModule = class _AppRoutingModule {
  static \u0275fac = function AppRoutingModule_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _AppRoutingModule)();
  };
  static \u0275mod = /* @__PURE__ */ i06.\u0275\u0275defineNgModule({ type: _AppRoutingModule });
  static \u0275inj = /* @__PURE__ */ i06.\u0275\u0275defineInjector({ imports: [RouterModule2.forRoot(routes), RouterModule2] });
};

// src/app/app.config.ts
import { provideClientHydration } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_platform-browser.js?v=c8d19cfe";
var appConfig = {
  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration()]
};

// src/app/app.component.ts
import { Component as Component6 } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
import { RouterOutlet } from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_router.js?v=c8d19cfe";
import * as i07 from "/@fs/E:/MSC IT/Node/Project/crud_2/admin/.angular/cache/18.2.5/vite/deps/@angular_core.js?v=c8d19cfe";
var AppComponent = class _AppComponent {
  title = "admin";
  static \u0275fac = function AppComponent_Factory(__ngFactoryType__) {
    return new (__ngFactoryType__ || _AppComponent)();
  };
  static \u0275cmp = /* @__PURE__ */ i07.\u0275\u0275defineComponent({ type: _AppComponent, selectors: [["app-root"]], standalone: true, features: [i07.\u0275\u0275StandaloneFeature], decls: 2, vars: 0, template: function AppComponent_Template(rf, ctx) {
    if (rf & 1) {
      i07.\u0275\u0275element(0, "navbar")(1, "router-outlet");
    }
  }, dependencies: [
    RouterOutlet,
    NavbarComponent
  ] });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && i07.\u0275setClassDebugInfo(AppComponent, { className: "AppComponent", filePath: "src\\app\\app.component.ts", lineNumber: 24 });
})();

// src/main.ts
bootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));


//# sourceMappingURL=data:application/json;base64,